name: Record Demo

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  record-demo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: bun install

      - name: Install recording tools
        run: |
          # Install asciinema for recording
          sudo apt-get update
          sudo apt-get install -y asciinema

          # Install svg-term-cli for converting to SVG
          npm install -g svg-term-cli

      - name: Create recording wrapper script
        run: |
          cat > record.sh << 'EOF'
          #!/bin/bash
          set -e

          # Run the demo and ensure it stays alive long enough
          bun run demo.ts

          # Ensure we have a clean exit
          exit 0
          EOF
          chmod +x record.sh

      - name: Record demo with asciinema
        run: |
          # Set terminal size for readable output
          export COLUMNS=80
          export LINES=24

          # Record the demo to asciinema format
          echo "Recording demo with asciinema..."
          asciinema rec demo.cast \
            --overwrite \
            --command "./record.sh" \
            --cols 80 \
            --rows 24

          echo "Asciinema recording complete"
          ls -lh demo.cast
        timeout-minutes: 1

      - name: Convert to SVG
        run: |
          # Convert asciinema recording to SVG
          echo "Converting to SVG..."
          cat demo.cast | svg-term --out demo.svg --window --width 80 --height 24

          echo "Conversion complete"
          ls -lh demo.svg
        timeout-minutes: 1

      - name: Verify demo.svg was created
        run: |
          if [ -f demo.svg ]; then
            echo "✅ Demo recording created successfully"
            ls -lh demo.svg
          else
            echo "❌ Failed to create demo.svg"
            exit 1
          fi

      - name: Upload demo artifact
        uses: actions/upload-artifact@v4
        with:
          name: demo-recording
          path: demo.svg
          retention-days: 30

      - name: Comment on PR with artifact link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const runId = context.runId;
            const repo = context.repo;

            // Get artifact information
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: repo.owner,
              repo: repo.repo,
              run_id: runId,
            });

            const demoArtifact = artifacts.data.artifacts.find(
              artifact => artifact.name === 'demo-recording'
            );

            if (demoArtifact) {
              const comment = `## 🎬 Demo Recording Available

              A demo recording has been generated for this PR!

              **📦 Artifact Details:**
              - Name: \`demo-recording\`
              - File: \`demo.svg\`
              - Size: ${(demoArtifact.size_in_bytes / 1024).toFixed(2)} KB

              **🔗 Download:**
              [View Action Run](https://github.com/${repo.owner}/${repo.repo}/actions/runs/${runId})

              **📖 How to view:**
              1. Click the link above to go to the Action run
              2. Scroll down to the "Artifacts" section
              3. Download \`demo-recording\`
              4. Open the \`demo.svg\` file in your browser

              ---
              *This demo was automatically generated by the Record Demo workflow*`;

              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
