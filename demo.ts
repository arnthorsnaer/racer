#!/usr/bin/env bun
/**
 * Automated demo script for Racer
 *
 * This script displays information about the Racer typing game
 * without requiring user interaction. Perfect for:
 * - GitHub Actions workflow recordings
 * - Automated demonstrations
 * - CI/CD screenshots
 *
 * Usage:
 *   bun run demo.ts
 *   node --loader ts-node/esm demo.ts
 */

const DEMO_DURATION = 5000; // 5 seconds

/**
 * Display a formatted banner with game information
 */
async function runDemo() {
  console.clear();

  // Display banner with colors
  console.log('\x1b[1;36m╔════════════════════════════════════════╗\x1b[0m');
  console.log('\x1b[1;36m║                                        ║\x1b[0m');
  console.log('\x1b[1;36m║         \x1b[1;33mRACER - Typing Game\x1b[1;36m         ║\x1b[0m');
  console.log('\x1b[1;36m║                                        ║\x1b[0m');
  console.log('\x1b[1;36m╚════════════════════════════════════════╝\x1b[0m');
  console.log('');
  console.log('\x1b[1;32m✨ Welcome to Racer! ✨\x1b[0m');
  console.log('');
  console.log('An interactive terminal typing game designed');
  console.log('for learning the Icelandic alphabet.');
  console.log('');

  console.log('\x1b[1;33m🎮 Features:\x1b[0m');
  console.log('  • Full Icelandic alphabet support');
  console.log('    (á, ð, é, í, ó, ú, ý, þ, æ, ö)');
  console.log('  • Multiple difficulty levels');
  console.log('  • Real-time character matching');
  console.log('  • Sound effects and scoring system');
  console.log('  • Adaptive difficulty progression');
  console.log('  • Performance statistics tracking');
  console.log('');

  console.log('\x1b[1;33m⌨️  Controls:\x1b[0m');
  console.log('  • Type characters to match falling letters');
  console.log('  • F1 - Toggle sound on/off');
  console.log('  • Ctrl+C - Quit game');
  console.log('  • Y/N - Continue or end after completing word');
  console.log('');

  console.log('\x1b[1;33m🚀 Quick Start:\x1b[0m');
  console.log('  \x1b[36mnpm install\x1b[0m          # Install dependencies');
  console.log('  \x1b[36mnpm start\x1b[0m            # Start the game');
  console.log('  \x1b[2m# or\x1b[0m');
  console.log('  \x1b[36mbun run index.ts\x1b[0m     # Run with Bun');
  console.log('');

  console.log('\x1b[1;33m📦 Project Info:\x1b[0m');
  console.log('  • Language: TypeScript');
  console.log('  • Runtime: Node.js / Bun');
  console.log('  • Testing: Vitest');
  console.log('  • Architecture: Clean/Hexagonal');
  console.log('');

  console.log('\x1b[2m─────────────────────────────────────────\x1b[0m');
  console.log('\x1b[2mDemo recording • Generated by GitHub Actions\x1b[0m');
  console.log('');

  // Keep output visible for the specified duration
  await new Promise(resolve => setTimeout(resolve, DEMO_DURATION));

  console.log('\x1b[1;32m✓ Demo complete!\x1b[0m');
}

// Run the demo and handle any errors
runDemo()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error('\x1b[1;31mDemo error:\x1b[0m', error);
    process.exit(1);
  });
